"""init

Revision ID: 31dac865ce38
Revises: 
Create Date: 2025-09-22 19:02:03.958095

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '31dac865ce38'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vat_number', sa.String(), nullable=True),
    sa.Column('registration_number', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('raw_source', sa.JSON(), nullable=True),
    sa.Column('current_status', sa.String(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_companies_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_current_status'), ['current_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_registration_number'), ['registration_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_vat_number'), ['vat_number'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('check_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('check_events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_check_events_event_type'), ['event_type'], unique=False)

    op.create_table('checks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('check_type', sa.String(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('checks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_checks_check_type'), ['check_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_checks_status'), ['status'], unique=False)

    op.create_table('company_owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('owner_name', sa.String(), nullable=True),
    sa.Column('ownership_share', sa.Numeric(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('company_owners', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_company_owners_owner_name'), ['owner_name'], unique=False)

    op.create_table('monitoring_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notify_by', sa.String(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('monitoring_subscriptions')
    with op.batch_alter_table('company_owners', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_company_owners_owner_name'))

    op.drop_table('company_owners')
    with op.batch_alter_table('checks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_checks_status'))
        batch_op.drop_index(batch_op.f('ix_checks_check_type'))

    op.drop_table('checks')
    with op.batch_alter_table('check_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_check_events_event_type'))

    op.drop_table('check_events')
    op.drop_table('users')
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companies_vat_number'))
        batch_op.drop_index(batch_op.f('ix_companies_registration_number'))
        batch_op.drop_index(batch_op.f('ix_companies_name'))
        batch_op.drop_index(batch_op.f('ix_companies_current_status'))
        batch_op.drop_index(batch_op.f('ix_companies_country'))

    op.drop_table('companies')
    # ### end Alembic commands ###
